@model PageModel<DashboardModel> 
@{
    ViewBag.Title = Text.Dashboard;

}
<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800"><i class="fas fa-tachometer-alt"></i> @Text.Dashboard</h1>
    <a asp-action="Index" asp-controller="Document" asp-route-Id="@null" class="d-none d-sm-inline-block btn btn-sm btn-success shadow-sm"><i class="fas fa-eye fa-sm text-white-50"></i> @Text.Read_a_book</a>
</div>

<!-- Content Row -->
<div class="row">

    @if(Model?.DataModel?.TopSubCategoryReadings != null)
    {
        <partial name="_CategoryPartial.cshtml" model="Model.DataModel.TopSubCategoryReadings"/>
    }

</div>

<!-- Content Row -->

<div class="row">

    <!-- Area Chart -->
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-success">@Model.DataModel.ReadingsOverviewTitle</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myAreaChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Pie Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-success">@Model.DataModel.ReadingsByCategoryOverviewTitle</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-pie pt-4 pb-2">
                    <canvas id="myPieChart"></canvas>
                </div>
                <div class="mt-4 text-center small">
                    @if(Model.DataModel.TopCategoryReadings.Keys.Count() > 0)
                    {
                        <span class="mr-2">
                            <i class="fas fa-circle text-success"></i> @Model.DataModel.TopCategoryReadings.Keys.ElementAt(0)
                        </span>
                        @if(Model.DataModel.TopCategoryReadings.Keys.Count() > 1)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle text-primary"></i> @Model.DataModel.TopCategoryReadings.Keys.ElementAt(1)
                            </span>
                        }
                        @if(Model.DataModel.TopCategoryReadings.Keys.Count() > 2)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle text-info"></i> @Model.DataModel.TopCategoryReadings.Keys.ElementAt(2)
                            </span>
                        }
                        @if(Model.DataModel.TopCategoryReadings.Keys.Count() > 3)
                        {
                            <span class="mr-2">
                                <i class="fas fa-circle text-warning"></i> @Model.DataModel.TopCategoryReadings.Keys.ElementAt(3)
                            </span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Content Row -->
<div class="row">

    <!-- Content Column -->
    <div class="col-lg-6 mb-4">

        <!-- Project Card Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-success">@Model.DataModel.ReadingsBySubCategoryOverviewTitle</h6>
            </div>
            <div class="card-body">
                @if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 0)
                {

                    <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(0).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(0))%</span></h4>
                    <div class="progress mb-4">
                        <div class="progress-bar bg-danger" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(0))%" aria-valuenow="@Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(0)" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                    if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 1)
                    {
                        <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(1).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(1))%</span></h4>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-warning" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(1))%" aria-valuenow="@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(1))" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                    if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 2)
                    {
                        <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(2).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(2))%</span></h4>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-secondary" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(2))%" aria-valuenow="@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(2))" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                    if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 3)
                    {
                        <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(3).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(3))%</span></h4>
                        <div class="progress mb-4">
                            <div class="progress-bar bg-info" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(3))%" aria-valuenow="@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(3))" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                    if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 4)
                    {
                        <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(4).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(4))%</span></h4>
                        <div class="progress">
                            <div class="progress-bar bg-primary" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(4))%" aria-valuenow="@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(4))" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                    if (Model.DataModel.TopPercentBySubCategoryReadings.Count > 5)
                    {
                        <h4 class="small font-weight-bold">@Model.DataModel.TopPercentBySubCategoryReadings.Keys.ElementAt(5).Name <span class="float-right">@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(5))%</span></h4>
                        <div class="progress">
                            <div class="progress-bar bg-success" role="progressbar" style="width: @(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(5))%" aria-valuenow="@(Model.DataModel.TopPercentBySubCategoryReadings.Values.ElementAt(5))" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Color System -->
        <div class="row">
            @if (Model.DataModel.TopDocumentReadings.Count() > 0)
            {
                <div class="col-lg-6 mb-4">
                    <div class="card bg-primary text-white shadow">
                        <div class="card-body">
                            <div class="truncate">
                                <a class="text-white"
                                   asp-action="Index"
                                   asp-controller="Document"
                                   asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(0).Id"
                                   title="@Model.DataModel.TopDocumentReadings.ElementAt(0).Title">
                                    @Model.DataModel.TopDocumentReadings.ElementAt(0).Title
                                </a>
                            </div>
                            <div class="text-white-50 small">
                                <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(0).ReadCount
                            </div>
                        </div>
                    </div>
                </div>
                @if (Model.DataModel.TopDocumentReadings.Count() > 1)
                {
                    <div class="col-lg-6 mb-4">
                        <div class="card bg-success text-white shadow">
                            <div class="card-body">
                                <div class="truncate">
                                    <a class="text-white"
                                       asp-action="Index"
                                       asp-controller="Document"
                                       asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(1).Id"
                                       title="@Model.DataModel.TopDocumentReadings.ElementAt(1).Title">
                                        @Model.DataModel.TopDocumentReadings.ElementAt(1).Title
                                    </a>
                                </div>
                                <div class="text-white-50 small">
                                    <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(1).ReadCount
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.DataModel.TopDocumentReadings.Count() > 2)
                {
                    <div class="col-lg-6 mb-4">
                        <div class="card bg-info text-white shadow">
                            <div class="card-body">
                                <div class="truncate">
                                    <a class="text-white"
                                       asp-action="Index"
                                       asp-controller="Document"
                                       asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(2).Id"
                                       title="@Model.DataModel.TopDocumentReadings.ElementAt(2).Title">
                                        @Model.DataModel.TopDocumentReadings.ElementAt(2).Title
                                    </a>
                                </div>
                                <div class="text-white-50 small">
                                    <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(2).ReadCount
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.DataModel.TopDocumentReadings.Count() > 3)
                {
                    <div class="col-lg-6 mb-4">
                        <div class="card bg-warning text-white shadow">
                            <div class="card-body">
                                <div class="truncate">
                                    <a class="text-white"
                                       asp-action="Index"
                                       asp-controller="Document"
                                       asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(3).Id"
                                       title="@Model.DataModel.TopDocumentReadings.ElementAt(3).Title">
                                        @Model.DataModel.TopDocumentReadings.ElementAt(3).Title
                                    </a>
                                </div>
                                <div class="text-white-50 small">
                                    <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(3).ReadCount
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.DataModel.TopDocumentReadings.Count() > 4)
                {
                    <div class="col-lg-6 mb-4">
                        <div class="card bg-danger text-white shadow">
                            <div class="card-body">
                                <div class="truncate">
                                    <a class="text-white"
                                       asp-action="Index"
                                       asp-controller="Document"
                                       asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(4).Id"
                                       title="@Model.DataModel.TopDocumentReadings.ElementAt(4).Title">
                                        @Model.DataModel.TopDocumentReadings.ElementAt(4).Title
                                    </a>
                                </div>
                                <div class="text-white-50 small">
                                    <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(4).ReadCount
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.DataModel.TopDocumentReadings.Count() > 5)
                {
                    <div class="col-lg-6 mb-4">
                        <div class="card bg-secondary text-white shadow">
                            <div class="card-body">
                                <div class="truncate">
                                    <a class="text-white"
                                       asp-action="Index"
                                       asp-controller="Document"
                                       asp-route-documentIds="@Model.DataModel.TopDocumentReadings.ElementAt(5).Id"
                                       title="@Model.DataModel.TopDocumentReadings.ElementAt(5).Title">
                                        @Model.DataModel.TopDocumentReadings.ElementAt(5).Title
                                    </a>
                                </div>
                                <div class="text-white-50 small">
                                    <i class="fas fa-eye"></i> @Model.DataModel.TopDocumentReadings.ElementAt(5).ReadCount
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

    </div>

    <div class="col-lg-6 mb-4">

        <!-- Illustrations -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-success">@Text.How_to_read_a_document</h6>
            </div>
            <div class="card-body">
                <div class="text-center">
                    <img class="img-fluid px-3 px-sm-4 mt-3 mb-4" style="width: 25rem;" src="img/undraw_posting_photo.svg" alt="">
                </div>
                <p>Add some quality, svg illustrations to your project courtesy of <a target="_blank" rel="nofollow" href="http://myiuc.com/">unDraw</a>, a constantly updated collection of beautiful svg images that you can use completely free and without attribution!</p>
                <a target="_blank" rel="nofollow" href="http://myiuc.com/">Browse Illustrations on unDraw &rarr;</a>
            </div>
        </div>

        <!-- Approach -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-success">@string.Format(Text.About_x, ViewBag.AppName)</h6>
            </div>
            <div class="card-body">
                <p>SB Admin 2 makes extensive use of Bootstrap 4 utility classes in order to reduce CSS bloat and poor page performance. Custom CSS classes are used to create custom components and custom utility classes.</p>
                <p class="mb-0">Before working with this theme, you should become familiar with the Bootstrap framework, especially the utility classes.</p>
            </div>
        </div>

    </div>
</div>
@section scripts{

    <!-- Page level plugins -->
    <script src="~/vendor/chart.js/Chart.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="~/js/demo/chart-area-demo.js"></script>
    <script src="~/js/demo/chart-pie-demo.js"></script>

    <script>
        $(function () {
            // Area Chart Example
            var ctx = document.getElementById("myAreaChart");
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ["@Html.Raw(string.Join("\",\"", Model.DataModel.ReadingsPerMonth.Keys.ToArray()))"],
                    datasets: [{
                        label: "@Text.Readings",
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 223, 0.05)",
                        borderColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointBorderColor: "rgba(78, 115, 223, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: [@(string.Join(",", Model.DataModel.ReadingsPerMonth.Values.ToArray()))],
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                maxTicksLimit: 5,
                                padding: 10,
                                // Include a dollar sign in the ticks
                                callback: function (value, index, values) {
                                    return number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                            }
                        }
                    }
                }
            });

            // Pie Chart Example
            var ctx = document.getElementById("myPieChart");
            var myPieChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ["@Html.Raw(string.Join("\",\"", Model.DataModel.TopCategoryReadings.Keys.ToArray()))"],
                    datasets: [{
                        data: [@(string.Join(",", Model.DataModel.TopCategoryReadings.Values.ToArray()))],
                        backgroundColor: ['#1cc88a', '#4e73df', '#36b9cc', '#f6c23e'],
                        hoverBackgroundColor: ['#17a673', '#2e59d9', '#2c9faf', '#edab05'],
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: false
                    },
                    cutoutPercentage: 80,
                },
            });
        });
    </script>
}