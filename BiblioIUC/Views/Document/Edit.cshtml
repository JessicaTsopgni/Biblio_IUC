@model PageModel<DocumentModel>
@{
    ViewBag.Title = (Model?.DataModel?.Id ?? 0) == 0 ? Text.Create_a_document : Text.Edit_a_document;
}
<!--Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    
    <h1 class="h3 mb-0 text-gray-800">
        <a href="@Model.ReturnUrl" class="text-gray-800" style="text-decoration:none">
            <i class="fas fa-chevron-circle-left"></i>
        </a>
        @ViewBag.Title
    </h1>
</div>

<form id="formEdit" method="post" asp-action="Edit" asp-controller="Document" enctype="multipart/form-data">
    <partial name="_LayoutInput" model="Model" />
    <input type="hidden" asp-for="DataModel.Id" />
    <input type="hidden" asp-for="DataModel.ForExtraction" />
    <input type="hidden" asp-for="DataModel.ImageUploadedTmpFileName" />
    <input type="hidden" asp-for="DataModel.ImageUploadedTmpFileName" />
    <input type="hidden" asp-for="DataModel.FileUploadedTmpFileName" />
    <input type="hidden" asp-for="DataModel.FileUploadedName" />
    <input type="hidden" asp-for="DataModel.ImageLink" />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <div class="row">
                    <div class="col-auto mr-auto">
                        <label asp-for="DataModel.FileUploaded">@Text.The_document</label>
                    </div>
                    <div class="col-auto">
                        <a href="javascript:;" onclick="extract()" id="extract" style="display:none">
                            <i class="fas fa-file-export"></i> @Text.Extract_metadata
                        </a>
                    </div>
                </div>
                <div class="custom-file">
                    <input type="file" accept="application/pdf" class="custom-file-input" asp-for="DataModel.FileUploaded">
                    <label class="custom-file-label truncate" data-asterix="false" asp-for="DataModel.FileUploaded">@Text.Upload_the_document <i class="fas fa-file-pdf text-danger"></i></label>
                    <span class="text-danger" asp-validation-for="DataModel.FileUploaded"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-7">
                        <label>@Text.Cover_image <i style="font-size:10px">(max. : 2Mo)</i></label>
                    </div>
                    <div id="cropper_btn" class="col-md-5 justify-content-end d-flex" style="display:none !important">
                        <button type="button" onclick="cropper_rotate_left()" class="btn btn-outline-primary btn-circle-mini">
                            <i class="fas fa-undo-alt"></i>
                        </button>
                        <button type="button" onclick="cropper_rotate_right()" class="btn btn-outline-primary btn-circle-mini ml-1">
                            <i class="fas fa-redo-alt"></i>
                        </button>
                        <button type="button" onclick="cropper_reset()" class="btn btn-outline-info btn-circle-mini ml-1">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                        <button type="button" onclick="cropper_done()" class="btn btn-outline-success btn-circle-mini ml-1">
                            <i class="fas fa-check"></i>
                        </button>
                    </div>
                </div>
                <div id="preview" class="card justify-content-center align-items-center"
                     style="height: 320px;background-color: transparent;">
                    @if (!string.IsNullOrEmpty(Model?.DataModel.ImageLink))
                    {
                        <img id="@Html.IdFor(x=> x.DataModel.ImageLink)" src="@Url.Content(Model.DataModel.ImageLink)" class="img-fluid rounded" />
                    }
                    else
                    {
                        <i class="fas fa-image" style="font-size: 1000%;"></i>
                    }
                </div>
                <div class="row">
                    <div class="col-md-8">
                        @if (!string.IsNullOrEmpty(Model?.DataModel.ImageLink))
                        {
                            <div class="custom-control custom-checkbox" style="font-size:12px">
                                <input type="checkbox" class="custom-control-input" asp-for="DataModel.DeleteImage">
                                <label class="custom-control-label pt-1" asp-for="DataModel.DeleteImage"></label>
                            </div>
                        }
                    </div>
                    <div class="col-md-4 justify-content-end d-flex">
                        <a href="#" onclick="$('#photo_input').click()">@Text.Browser</a>
                    </div>
                </div>
                <input type="file" accept="image/*" id="photo_input" style="display: none;" onchange="readURL(this, $('#preview'), 2 * 1024, $('#preview').width(), $('#preview').height(), custum_cropper)" />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <div class="row">
                    <div class="col-5">
                        <label asp-for="DataModel.Code"></label>
                    </div>
                    <div class="col-7 text-right">
                        <a href="javascript:;" onclick="generate_code(this)"><i class="fas fa-sync"></i> @Text.Generate</a>
                    </div>
                </div>
                <input asp-for="DataModel.Code" type="text" class="form-control" placeholder="@Text.Document_code_or_isbn" />
                <span class="text-danger" asp-validation-for="DataModel.Code"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Title"></label>
                <input asp-for="DataModel.Title" type="text" class="form-control" placeholder="@Text.Document_title" />
                <span class="text-danger" asp-validation-for="DataModel.Title"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Subtitle"></label>
                <input asp-for="DataModel.Subtitle" type="text" class="form-control" placeholder="@Text.Document_subtitle" />
                <span class="text-danger" asp-validation-for="DataModel.Subtitle"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Authors"></label>
                <textarea asp-for="DataModel.Authors" class="form-control" placeholder="@Text.Document_author"></textarea>
                <span class="text-danger" asp-validation-for="DataModel.Authors"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Contributors"></label>
                <textarea asp-for="DataModel.Contributors" class="form-control" placeholder="@Text.Document_contributors"></textarea>
                <span class="text-danger" asp-validation-for="DataModel.Contributors"></span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="DataModel.CategoryId"></label>
                <select class="custom-select" asp-for="DataModel.CategoryId" asp-items="@Model.DataModel.CategoryModels">
                    <option value="">@Text.Choose_a_category</option>
                </select>
                <span class="text-danger" asp-validation-for="DataModel.CategoryId"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Publisher"></label>
                <input type="text" asp-for="DataModel.Publisher" class="form-control" placeholder="@Text.Document_publisher" />
                <span class="text-danger" asp-validation-for="DataModel.Publisher"></span>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="DataModel.Language"></label>
                        <input asp-for="DataModel.Language" type="text" class="form-control" placeholder="@Text.Document_language" />
                        <span class="text-danger" asp-validation-for="DataModel.Language"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="DataModel.PublishDate"></label>
                        <input type="date" max="@DateTime.UtcNow.ToString("yyyy-MM-dd")" asp-for="DataModel.PublishDate" class="form-control" placeholder="@Text.Document_publish_date" />
                        <span class="text-danger" asp-validation-for="DataModel.PublishDate"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DataModel.Description"></label>
                <textarea asp-for="DataModel.Description" class="form-control" placeholder="@Text.Document_description"></textarea>
                <span class="text-danger" asp-validation-for="DataModel.Description"></span>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="DataModel.NumberOfPages"></label>
                        <input type="number" asp-for="DataModel.NumberOfPages" class="form-control" placeholder="@Text.Document_number_of_pages" />
                        <span class="text-danger" asp-validation-for="DataModel.NumberOfPages"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label>@Text.Status</label>
                        <div class="custom-control custom-switch custom-switch-lg justify-content-center align-items-center">
                            <input asp-for="DataModel.State" type="checkbox" class="custom-control-input" onchange="$('#@Html.IdFor(x=> x.DataModel.Status)').val($(this).is(':checked') ? 1 : 0);$('#state_label').html($(this).is(':checked') ? '@Text.Actived' : '@Text.Disabled')">
                            <label asp-for="DataModel.State" id="state_label" class="custom-control-label">@Model.DataModel.StatusName</label>
                        </div>
                        <input type="hidden" asp-for="DataModel.Status" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row flex-row-reverse">
        <div class="col-md-4 mb-3">
            <button type="submit" onclick="$('#@Html.IdFor(x=> x.DataModel.UpdateMetadata)').val('false');" class="btn btn-success btn-block">
                <i class="fas fa-check"></i>
                @Text.Save
            </button>
        </div>
        <div class="col-md-4 mb-3">
            <input type="hidden" value="false" asp-for="DataModel.UpdateMetadata" />
            <button type="submit" onclick="$('#@Html.IdFor(x=> x.DataModel.UpdateMetadata)').val('true');" class="btn btn-outline-success btn-block">
                <i class="fas fa-save"></i>
                <small>@Text.Save_and_update_metadata_file</small>
            </button>
        </div>
        <div class="col-md-4">
            <a href="@Model.ReturnUrl" class="btn btn-secondary btn-block">
                <i class="fas fa-undo"></i>
                @Text.Cancel
            </a>
            <small><i>* @Text.Required_fields</i></small>
        </div>
    </div>
</form>
@section css{
    <link rel="stylesheet" href="~/vendor/cropperjs/cropper.min.css" />
}
@section scripts{
    <script src="~/vendor/jquery/jquery.validate.min.js"></script>
    <script src="~/vendor/jquery/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/vendor/cropperjs/cropper.min.js"></script>
    <script>
        var cropper = null;
        var defaut_preview = null;
        var preview_img = null;
        function custum_cropper(img, default_content) {
            defaut_preview = default_content;
            preview_img = img;
            cropper = new Cropper(
                img,
                {
                    aspectRatio: 2/3
                }
            );
            cropper.crop();
            $('#cropper_btn').removeAttr('style');
            $('button[type="submit"]').prop('disabled', true);
        }
        function cropper_rotate_left() {
            cropper.rotate(-45);
        }
        function cropper_rotate_right() {
            cropper.rotate(45);
        }
        function cropper_reset() {
            cropper.reset();
            $('#cropper_btn').attr('style', 'display:none!important');
            $('#preview').html(default_content);
            $('#photo_input').val(null);
            //$('#@Html.IdFor(x => x.DataModel.ImageUploaded)').val(null);
            $('button[type="submit"]').prop('disabled', false);
        }
        var _blob, filename, file_type;
        function cropper_done() {
            cropper.getCroppedCanvas().toBlob(function (blob) {
                _blob = blob;
                filename = $('#photo_input')[0].files[0].name;
                file_type = $('#photo_input')[0].files[0].type;
                var url = window.URL || window.webkitURL;
                var objectURL = url.createObjectURL(blob);
                preview_img.src = objectURL;
                $(preview_img).removeAttr('style');
                $(preview_img).attr('style', 'max-width:' + ($('#preview').width() - 5) + 'px;max-height:' + ($('#preview').height() - 5) + 'px');
                $('#cropper_btn').attr('style', 'display:none!important');
                $('#photo_input').val(null);
                $('button[type="submit"]').prop('disabled', false);
            });
            cropper.destroy();
        }

        @if(!string.IsNullOrEmpty(Model?.DataModel?.FileUploadedName))
        {
            @:$('.custom-file-label').html('@Html.DisplayFor(x => x.DataModel.FileUploadedName)');
        }
        $('#formEdit').submit(function (e) {
            //e.preventDefault();
            if (!$(this).valid()) {
               return false;
            }

            $(this).find(":submit").attr('disabled', 'disabled');
            if (_blob) {
                var file = new File([_blob], filename, { type: file_type })
                var input = document.createElement('input')

                input.type = 'file'
                // input.multiple = true
                input.files = createFileList(file)
                input.name = '@Html.NameFor(x=>x.DataModel.ImageUploaded)'
                input.hidden = true
                this.appendChild(input)
            }
            console.log('valid');

            return true;
        });
        function createFileList(a) {
            a = [].slice.call(Array.isArray(a) ? a : arguments)
            for (var c, b = c = a.length, d = !0; b-- && d;) d = a[b] instanceof File
            if (!d) throw new TypeError('expected argument to FileList is File or array of File objects')
            for (b = (new ClipboardEvent('')).clipboardData || new DataTransfer; c--;) b.items.add(a[c])
            return b.files
        }
        var inputFileDegaultText = $('#@Html.IdFor(x=>x.DataModel.FileUploaded)').siblings(".custom-file-label").html();
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            if (!fileName) {
                fileName = inputFileDegaultText;
                $(this).removeClass("valid");
                $('#extract').hide();
            } else {
                $(this).addClass("valid");
                $('#extract').show();
            }
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
        function generate_code(link) {
            $("#@Html.IdFor(x=> x.DataModel.Code)").val("@(Text.InProcess)...");
            $(link).attr("disabled", true);
            $.getJSON("@Url.Action("GenerateCode", "Document")", function (result) {
                $("#@Html.IdFor(x=> x.DataModel.Code)").val(result);
                $(link).removeAttr("disabled");
                $("#@Html.IdFor(x=> x.DataModel.Code)").focus();
            });
        }

        function extract() {
            $("#formEdit").validate().settings.ignore = "*";
            $('#@Html.IdFor(x => x.DataModel.ForExtraction)').val('true');
            $('#formEdit').submit();
        }
    </script>
}
