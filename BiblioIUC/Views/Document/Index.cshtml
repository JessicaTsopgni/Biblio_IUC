@model PageListModel<DocumentModel>
@{
    if (string.IsNullOrEmpty(Model?.SearchValue))
    {
        if (string.IsNullOrEmpty(ViewBag.SearchCategoryName))
        {
            ViewBag.Title = Text.The_documents;
        }
        else
        {
            ViewBag.Title = string.Format(Text.Documents_x, ViewBag.SearchCategoryName);
        }
    }
    else
    {
        ViewBag.Title = string.Format(Text.Search_document_results_of_x, Model?.SearchValue);
    }
}
<!--Page Heading -->
<div class="d-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">
        <a asp-action="Index" asp-controller="Document" asp-route-Id="@null" class=" text-gray-800">
            <i class="fas fa-book"></i> @ViewBag.Title
        </a>
    </h1>
    @if (User.FindFirst(ClaimTypes.Role).Value == RoleOptions.Librarian.ToString())
    {
        <a asp-action="Create" asp-controller="Document" asp-route-ReturnUrl="@ViewBag.Url" class="d-none d-sm-inline-block btn btn-sm btn-success shadow-sm"><i class="fas fa-plus fa-sm text-white-50"></i> @Text.Create_a_document</a>
        <a asp-action="Create" asp-controller="Document" asp-route-ReturnUrl="@ViewBag.Url" class="d-block d-sm-none btn btn-success btn-circle shadow-sm">
            <i class="fas fa-plus"></i>
        </a>
    }
</div>
<div class="row" id="data_loaded">
    @if (Model != null && Model.DataModels != null && Model.DataModels.Count() > 0)
    {
        <partial name="_IndexPartial" model="Model.DataModels" />
    }
    else
    {
        <div class="col-md-12 mx-auto text-center">
            <i class="fas fa-info-circle"></i> <i>@Text.Document_not_found</i>
        </div>
    }
</div>
<div class="row d-none" id="loader">
    <div class="col-md-12 mx-auto text-center">
        <div class="spinner-border text-success" role="status">
            <span class="sr-only">@Text.Loading</span>
        </div>
    </div>
</div>
<partial name="_Modal" />
@section scripts{
    <script>
        var pageIndex = 1;
        var scrollLoad = true;
        $(window).scroll(function () {
            if (scrollLoad && ($(document).height() - $(this).height() - 100) < $(this).scrollTop()) {
                scrollLoad = false;
                loadData();
            }
        });

        function hasScroll() {
            return $(document).height() > $(window).height();
        }

        function loadData() {
            pageIndex++;
            $.ajax({
                type: 'GET',
                url: @Html.Raw(ViewBag.InfiniteScrollUrl.ToString().Contains("?") ? "'" + ViewBag.InfiniteScrollUrl + "&PageIndex=' + pageIndex" : "'" + ViewBag.InfiniteScrollUrl + "?PageIndex=' + pageIndex"),
                beforeSend: function () {
                    $('#loader').removeClass('d-none');
                },
                success: function (msg) {
                    scrollLoad = false;
                    if (msg) {
                        $("#data_loaded").append(msg);
                        if (!hasScroll())
                            loadData();
                        scrollLoad = true;
                    }
                },
                error: function (req, status, error) {
                    $("#data_loaded").append(
                        '<div class="col-md-12 mx-auto text-center text-danger"><i class="fas fa-exclamation-circle"></i> @Text.An_error_occured</div>'
                    );
                },
                        complete: function () {
                            $('#loader').addClass('d-none');
                }
            });
        }

        loadData();
    </script>
}